
body {

  background-color: rgb(245, 245, 245) !important;

}



a {
  color: #00B7FF;
}

.navbar {
  font-size: 18px;
  background-color: rgb(0, 80, 230);
  border: 1px solid rgba(0, 0, 0, 0.2);
  padding-bottom: 10px;
}


.main-nav {
  list-style-type: none;
  display: none;
}

.nav-links,
.logo {
  text-decoration: none;
  color: rgba(255, 255, 255, 0.7);
}

.main-nav li {
  text-align: center;
  margin: 15px auto;
}

img.covid-logo {
  display: inline-block;
  width: 40px;
  height: auto;
  margin-top: 3px;
  margin-left: 5px;
  margin-right: 8px;
}

.navbar-toggle {
  position: absolute;
  top: 10px;
  right: 20px;
  cursor: pointer;
  color: rgba(255, 255, 255, 0.8);
  font-size: 24px;
}

.navbar h3 {

color: white;
font-size: 16px;

}

.active {
  display: block;
}





  /*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
	@media
  only screen 
  and (max-width: 760px), (min-device-width: 768px) 
  and (max-device-width: 1024px)  {

  /* Force table to not be like tables anymore */
  .mrtable table, thead, tbody, th, td, tr {
    display: block;
    width: 85vw;

  }

  .mrtable table {

    border-collapse: collapse;
    border-radius: 1em;
    overflow: hidden;

  }

  /* Hide table headers (but not display: none;, for accessibility) */
  thead tr {
    position: absolute;
    top: -9999px;
    left: -9999px;
  
  }

  tr {
    margin: 0 0 1rem 0;
    background: rgb(255, 255, 255);
   

  }
   
  

  td {
    /* Behave  like a "row" */
    border: none;
    border-bottom: 1px solid #eee;
    position: relative;
    overflow:hidden;
    margin: 3px 0px 3px 0px;
    padding: 3px 10px 3px 30%;
  }

  td:before {
    /* Now like a table header */
    position: absolute;
    /* Top/left values mimic padding */
    top: 0;
    left: 6px;
    width: 45%;
    padding-right: 10px;
    white-space: nowrap;
  }

  /*
  Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
  */
  td:nth-of-type(1):before { content: "BSN"; }
  td:nth-of-type(2):before { content: "Name"; }
   td:nth-of-type(3):before { content: "Birth Date"; }
 td:nth-of-type(4):before { content: "Gender"; }
  td:nth-of-type(5):before { content: "Status"; }
  td:nth-of-type(6):before { content: "Region"; }
  td:nth-of-type(7):before { content: "Worker"; }
}


.form-container {
padding: 30px;

}

.dashboard-mobile {

display: flex;
flex-direction: row;
background-color: white;
margin: 0px 0px 10px 0px;


}

.dashboard-card {

width: 45vw;
margin: 0px 4px 0px 4px;
padding: 2px;

}


.vcenter {
  display: inline-block;
  vertical-align: middle;
  float: none;
}
.bg-danger {
background: #ef5350;

}
.deleteDialogEntityType {
font-weight:bold; 
padding-left: 2px; 
padding-right: 2px;  
}

 /*
 Modal styling
  */
